// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Board = require("./Board.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Button = require("./Button.js");
var Js_math = require("bs-platform/lib/js/js_math.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("App");

function getScore(state) {
  if (state) {
    return state[0];
  } else {
    return 0;
  }
}

function getActiveMole(state) {
  if (state) {
    return state[1];
  } else {
    return 0;
  }
}

function getNewActiveMole(param) {
  return Js_math.random_int(0, 9);
}

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var state = param[/* state */1];
              return React.createElement("div", {
                          className: "app"
                        }, React.createElement("div", {
                              className: "game"
                            }, state ? React.createElement("div", undefined, React.createElement("h1", undefined, String(state[0])), ReasonReact.element(undefined, undefined, Board.make(state[1], (function (param) {
                                              return Curry._1(send, /* Molear */2);
                                            }), /* array */[])), React.createElement("br", undefined), ReasonReact.element(undefined, undefined, Button.make("Reset", (function (_click) {
                                              return Curry._1(send, /* Reset */1);
                                            }), /* array */[]))) : ReasonReact.element(undefined, undefined, Button.make("Start Game", (function (_click) {
                                          return Curry._1(send, /* Start */0);
                                        }), /* array */[]))));
            }),
          /* initialState */(function (param) {
              return /* Stopped */0;
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                switch (action) {
                  case 0 : 
                      return /* UpdateWithSideEffects */Block.__(2, [
                                /* Playing */[
                                  0,
                                  0,
                                  0
                                ],
                                (function (self) {
                                    setInterval((function (param) {
                                            return Curry._1(self[/* send */3], /* ChangeActiveMole */[Js_math.random_int(0, 9)]);
                                          }), 1000);
                                    return /* () */0;
                                  })
                              ]);
                  case 1 : 
                      return /* Update */Block.__(0, [/* Stopped */0]);
                  case 2 : 
                      return /* Update */Block.__(0, [/* Playing */[
                                  getScore(state) + 100 | 0,
                                  Js_math.random_int(0, 9),
                                  0
                                ]]);
                  
                }
              } else {
                return /* Update */Block.__(0, [/* Playing */[
                            getScore(state),
                            action[0],
                            0
                          ]]);
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.getScore = getScore;
exports.getActiveMole = getActiveMole;
exports.getNewActiveMole = getNewActiveMole;
exports.make = make;
/* component Not a pure module */
